window.addEventListener("load", () => {
  document.getElementById("load-screen").style.display = "none"
})

var swiper = new Swiper(".canals-swiper .swiper", {
  slidesPerView: "auto",
  speed: 1000,
  autoplay: {
    delay: 2000,
  },
  loop: true,
});

let mainAnimation = document.getElementById("main-animation")
let pTop = 0;
let pLeft = 0;
let opacity = 0;

function mainAnim () {
  for(let i = 0; i < mainAnimation?.children.length; i++) {
    opacity = Math.floor(Math.random() * 5);
    pTop = Math.floor(Math.random() * (mainAnimation.offsetHeight - mainAnimation.children[0].offsetHeight));
    pLeft = Math.floor(Math.random() * (mainAnimation.offsetWidth - mainAnimation.children[0].offsetWidth));
    mainAnimation.children[i].style.top = pTop + "px";
    mainAnimation.children[i].style.left = pLeft + "px";
    mainAnimation.children[i].style.opacity = "0." + opacity;
  };
}

mainAnim ()

mainAnimation && setInterval(() => {
  mainAnim ()
}, 3000)


let tvAnimation = document.getElementsByClassName('films__flex')
let tvLeft = 0
let newTop = 0
let upBtn = document.getElementById("up-btn")
window.addEventListener("scroll", () => {
  let header = document.getElementById("header")
  if(window.scrollY > 10) {
    header.classList.add("activ-header")
  }else {
    header.classList.remove("activ-header")
  }
  if(document.getElementById("films")) {
    if(document.getElementById("films")?.offsetTop - (document.getElementById("films").offsetHeight / 2) < window.scrollY && document.getElementById("films").offsetTop + document.getElementById("films").offsetHeight > window.scrollY) {
      tvAnimation[0].style.left = tvLeft + "px"
      tvAnimation[1].style.left = tvLeft + "px"
      if(newTop > scrollY) {
        tvLeft -= 10
      }else {
        tvLeft += 10
      }
    }
  }
  if(window.scrollY > window.innerHeight) {
    upBtn.style.opacity = 1
    upBtn.style.zIndex = 9999
  }else {
    upBtn.style.zIndex = -1
    upBtn.style.opacity = 0
  }
  newTop = window.scrollY
})

upBtn.addEventListener("click", () => {
  window.scrollTo(0, 0)
})

let faqButtons = document.getElementsByClassName("faq__item")
let faqHiddens = document.getElementsByClassName("faq__item-hiden")
for(let g = 0; g < faqHiddens.length; g++) {
  faqHiddens[g].setAttribute("data-height", faqHiddens[g].offsetHeight)
  faqHiddens[g].style.height = "0"
}
for (let i = 0; i < faqButtons.length; i ++) {
  faqButtons[i].addEventListener("click", (e) => {
    if(!e.currentTarget.classList.contains("active")) {
      e.currentTarget.classList.add("active")
      e.currentTarget.children[1].style.height = e.currentTarget.children[1].scrollHeight + "px"
    }else {
      e.currentTarget.classList.remove("active")
      e.currentTarget.children[1].style.height = "0px"
    }
  })
}

let myroomLinks = document.getElementsByClassName("myroom-link")

for(let i = 0; i < myroomLinks.length; i ++) {
  myroomLinks[i].addEventListener("click", (e) => {
    let id = e.target.getAttribute("data-href")
    window.scrollTo(0, document.getElementById(id).offsetTop - (header.offsetHeight + 20))
  })
}

const codeInputs = document.getElementsByClassName("code-input")

if (codeInputs) {
  for (let i = 0; i < codeInputs.length; i++) {
    codeInputs[i].addEventListener("keyup", (e) => {
      if (e.keyCode === 8 || e.target.value === "") {
          codeInputs[i - 1]?.focus()
          e.target.value = ""
      } else {
          let newValue = e.target.value.split("")[e.target.value.split("").length - 1]
          e.target.value = newValue?.replace(/[^0-9]/g, '')
          if (e.target.value.split("").length >= 1) {
              codeInputs[i + 1]?.focus()
              if(i === 5) {
                document.getElementById("phone-verify").submit()
              }
          }
      }
  })
  }
}


let allModals = document.getElementsByClassName("modal")


const showModal = (id, e) => {
  for(let i = 0; i < allModals.length; i++) {
    if(allModals[i].getAttribute("id") === id) {
      allModals[i].style.display = "flex"
    }else {
      allModals[i].style.display = "none"
    }
  }
  document.getElementById("body").style.overflow = id ?  "hidden" : "auto"
}

for(let i = 0; i < allModals.length; i++) {
  allModals[i].addEventListener("click", (e) => {
    if(e.target === e.currentTarget) {
      showModal()
    }
  })
}

var imageAddr = "http://wallpaperswide.com/download/shadow_of_the_tomb_raider_2018_puzzle_video_game-wallpaper-7680x4800.jpg" + "?n=" + Math.random();
var startTime, endTime;
var downloadSize = 5616998; //5.36Mb
var download = new Image();
var roundedDecimals = 2;
var bytesInAKilobyte = 1024;

function showResults() {
  var duration = (endTime - startTime) / 1000;
  var bitsLoaded = downloadSize * 8;
  var speedBps = ( bitsLoaded / duration ).toFixed(roundedDecimals);
  var displaySpeed = speed(speedBps);
  var results = "<p>Скорость вашего соединения</p><span>" + displaySpeed.value + " " + displaySpeed.units + "</span>"
    
    $('#results').fadeOut('fast',function(){
      $('#results').html(results);
      $('#results').fadeIn('fast', function(){
        $('#starttest').text('Спасибо!');
      });
    });
}

function speed( bitsPerSecond ){
  var KBps = (bitsPerSecond / bytesInAKilobyte).toFixed(roundedDecimals);
  if ( KBps <= 1 ) return { value: bitsPerSecond, units: "Bps" };
  var MBps = (KBps / bytesInAKilobyte).toFixed(roundedDecimals);
  if ( MBps <= 1 ) return { value: KBps, units: "KBps" };
  else return { value: MBps, units: "MBps" };
}

$('#starttest').on('click', function(){
  $('#starttest').text('Подожди, идет проверка...');
  $('#starttest').attr('disabled', 'disabled');
  
  download.onload = function () {
    endTime = (new Date()).getTime();
    showResults();
  }
  startTime = (new Date()).getTime();
  download.src = imageAddr;
})

const avatar = document.getElementById("avatars")
const userMenu = document.getElementById("user-menu")
const headerPromo = document.getElementById("header-promo")

const showUserMenu = () => {
  if(userMenu.offsetHeight > 10) {
    userMenu.style.height = "0px"
    avatar.style.height = "0px"
    headerPromo.style.height = "0px"
    document.getElementById("showusermenu").children[1].style.transform = "rotate(0deg)"
  }else {
    userMenu.style.height = userMenu.scrollHeight + "px"
    document.getElementById("showusermenu").children[1].style.transform = "rotate(-180deg)"
  }
}

const showAvatar = () => {
  if(avatar.offsetHeight > 10) {
    avatar.style.height = "0px"
  }else {
    avatar.style.height = avatar.scrollHeight + "px"
  }
}

const showPromo = () => {
  if(headerPromo.offsetHeight > 10) {
    headerPromo.style.height = "0px"
    userMenu.style.height = (userMenu.scrollHeight - headerPromo.scrollHeight) + "px"
  }else {
    headerPromo.style.height = headerPromo.scrollHeight + "px"
    userMenu.style.height = (userMenu.scrollHeight + headerPromo.scrollHeight) + "px"
  }
}

const input = document.querySelector("#new_user_phone");
window.intlTelInput(input, {
  allowExtensions: true,
  autoFormat: true,
  autoPlaceholder: true,
  preferredCountries: ["no"],
  onlyCountries: ["at", "be", "dk", "fi", "fr", "de","nl", "no","se", "ch", "es", "us", "th", "tr", "ua", "gb", "ru", "pl"],
  nationalMode: false,
  defaultCountry: "auto",
  initialCountry: "ru",
  autoPlaceholder: "off",
  autoHideDialCode: false,
  nationalMode: false,
  separateDialCode: true,
  hiddenInput: "full_number",
  utilsScript: "https://cdn.jsdelivr.net/npm/intl-tel-input@18.1.1/build/js/utils.js",
}); 

document.getElementById("email-checkbox").addEventListener("click", (e) => {
  if(e.target.checked) {
    document.getElementById("reg-email").style.height = "0"
  }else {
    document.getElementById("reg-email").style.height = document.getElementById("reg-email").scrollHeight + "px"
  }
})

let paymentMethods = document.getElementsByClassName("payment-btn")

for(let i = 0; i < paymentMethods.length; i++) {
  paymentMethods[i].addEventListener("click", (e) => {
    paymentMethods[i === 0 ? 1 : 0].checked = false
    paymentMethods[i === 0 ? 0 : 1].checked = true
  })
}

new WOW().init();